//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConsoleProject.VSEPTPCHService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProspectSourcesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectSourcesDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectSourcePremiumsXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectSourcePremiumsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback RePushProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectsByProximityToZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProspectAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProspectDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHistoryEntryForProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHistoryEntryForProspectWithUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportBadProspectOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseProspectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::ConsoleProject.Properties.Settings.Default.ConsoleProject_VSEPTPCHService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProspectSourcesXMLCompletedEventHandler GetProspectSourcesXMLCompleted;
        
        /// <remarks/>
        public event GetProspectSourcesDataSetCompletedEventHandler GetProspectSourcesDataSetCompleted;
        
        /// <remarks/>
        public event GetProspectSourcePremiumsXmlCompletedEventHandler GetProspectSourcePremiumsXmlCompleted;
        
        /// <remarks/>
        public event GetProspectSourcePremiumsDataSetCompletedEventHandler GetProspectSourcePremiumsDataSetCompleted;
        
        /// <remarks/>
        public event GetReferenceXMLCompletedEventHandler GetReferenceXMLCompleted;
        
        /// <remarks/>
        public event AddProspectCompletedEventHandler AddProspectCompleted;
        
        /// <remarks/>
        public event RePushProspectCompletedEventHandler RePushProspectCompleted;
        
        /// <remarks/>
        public event GetProspectsByProximityToZipCodeCompletedEventHandler GetProspectsByProximityToZipCodeCompleted;
        
        /// <remarks/>
        public event GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventHandler GetProspectsByProximityToZipCodeDataTableDataSetCompleted;
        
        /// <remarks/>
        public event GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventHandler GetNearbyProspectsUsingSourcePremiumFilterDataSetCompleted;
        
        /// <remarks/>
        public event UpdateProspectAvailabilityCompletedEventHandler UpdateProspectAvailabilityCompleted;
        
        /// <remarks/>
        public event GetProspectDetailCompletedEventHandler GetProspectDetailCompleted;
        
        /// <remarks/>
        public event AddHistoryEntryForProspectCompletedEventHandler AddHistoryEntryForProspectCompleted;
        
        /// <remarks/>
        public event AddHistoryEntryForProspectWithUserCompletedEventHandler AddHistoryEntryForProspectWithUserCompleted;
        
        /// <remarks/>
        public event ReportBadProspectCompletedEventHandler ReportBadProspectCompleted;
        
        /// <remarks/>
        public event PurchaseProspectCompletedEventHandler PurchaseProspectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectSourcesXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProspectSourcesXML(string filterCriteria) {
            object[] results = this.Invoke("GetProspectSourcesXML", new object[] {
                        filterCriteria});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectSourcesXMLAsync(string filterCriteria) {
            this.GetProspectSourcesXMLAsync(filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetProspectSourcesXMLAsync(string filterCriteria, object userState) {
            if ((this.GetProspectSourcesXMLOperationCompleted == null)) {
                this.GetProspectSourcesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectSourcesXMLOperationCompleted);
            }
            this.InvokeAsync("GetProspectSourcesXML", new object[] {
                        filterCriteria}, this.GetProspectSourcesXMLOperationCompleted, userState);
        }
        
        private void OnGetProspectSourcesXMLOperationCompleted(object arg) {
            if ((this.GetProspectSourcesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectSourcesXMLCompleted(this, new GetProspectSourcesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectSourcesDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProspectSourcesDataSet(string filterCriteria) {
            object[] results = this.Invoke("GetProspectSourcesDataSet", new object[] {
                        filterCriteria});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectSourcesDataSetAsync(string filterCriteria) {
            this.GetProspectSourcesDataSetAsync(filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetProspectSourcesDataSetAsync(string filterCriteria, object userState) {
            if ((this.GetProspectSourcesDataSetOperationCompleted == null)) {
                this.GetProspectSourcesDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectSourcesDataSetOperationCompleted);
            }
            this.InvokeAsync("GetProspectSourcesDataSet", new object[] {
                        filterCriteria}, this.GetProspectSourcesDataSetOperationCompleted, userState);
        }
        
        private void OnGetProspectSourcesDataSetOperationCompleted(object arg) {
            if ((this.GetProspectSourcesDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectSourcesDataSetCompleted(this, new GetProspectSourcesDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectSourcePremiumsXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProspectSourcePremiumsXml(string sourceId, string filterCriteria) {
            object[] results = this.Invoke("GetProspectSourcePremiumsXml", new object[] {
                        sourceId,
                        filterCriteria});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectSourcePremiumsXmlAsync(string sourceId, string filterCriteria) {
            this.GetProspectSourcePremiumsXmlAsync(sourceId, filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetProspectSourcePremiumsXmlAsync(string sourceId, string filterCriteria, object userState) {
            if ((this.GetProspectSourcePremiumsXmlOperationCompleted == null)) {
                this.GetProspectSourcePremiumsXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectSourcePremiumsXmlOperationCompleted);
            }
            this.InvokeAsync("GetProspectSourcePremiumsXml", new object[] {
                        sourceId,
                        filterCriteria}, this.GetProspectSourcePremiumsXmlOperationCompleted, userState);
        }
        
        private void OnGetProspectSourcePremiumsXmlOperationCompleted(object arg) {
            if ((this.GetProspectSourcePremiumsXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectSourcePremiumsXmlCompleted(this, new GetProspectSourcePremiumsXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectSourcePremiumsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProspectSourcePremiumsDataSet(string sourceId, string filterCriteria) {
            object[] results = this.Invoke("GetProspectSourcePremiumsDataSet", new object[] {
                        sourceId,
                        filterCriteria});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectSourcePremiumsDataSetAsync(string sourceId, string filterCriteria) {
            this.GetProspectSourcePremiumsDataSetAsync(sourceId, filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetProspectSourcePremiumsDataSetAsync(string sourceId, string filterCriteria, object userState) {
            if ((this.GetProspectSourcePremiumsDataSetOperationCompleted == null)) {
                this.GetProspectSourcePremiumsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectSourcePremiumsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetProspectSourcePremiumsDataSet", new object[] {
                        sourceId,
                        filterCriteria}, this.GetProspectSourcePremiumsDataSetOperationCompleted, userState);
        }
        
        private void OnGetProspectSourcePremiumsDataSetOperationCompleted(object arg) {
            if ((this.GetProspectSourcePremiumsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectSourcePremiumsDataSetCompleted(this, new GetProspectSourcePremiumsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferenceXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReferenceXML(string action) {
            object[] results = this.Invoke("GetReferenceXML", new object[] {
                        action});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceXMLAsync(string action) {
            this.GetReferenceXMLAsync(action, null);
        }
        
        /// <remarks/>
        public void GetReferenceXMLAsync(string action, object userState) {
            if ((this.GetReferenceXMLOperationCompleted == null)) {
                this.GetReferenceXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceXMLOperationCompleted);
            }
            this.InvokeAsync("GetReferenceXML", new object[] {
                        action}, this.GetReferenceXMLOperationCompleted, userState);
        }
        
        private void OnGetReferenceXMLOperationCompleted(object arg) {
            if ((this.GetReferenceXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceXMLCompleted(this, new GetReferenceXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddProspect(string prospectXml, string sourceId) {
            object[] results = this.Invoke("AddProspect", new object[] {
                        prospectXml,
                        sourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProspectAsync(string prospectXml, string sourceId) {
            this.AddProspectAsync(prospectXml, sourceId, null);
        }
        
        /// <remarks/>
        public void AddProspectAsync(string prospectXml, string sourceId, object userState) {
            if ((this.AddProspectOperationCompleted == null)) {
                this.AddProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProspectOperationCompleted);
            }
            this.InvokeAsync("AddProspect", new object[] {
                        prospectXml,
                        sourceId}, this.AddProspectOperationCompleted, userState);
        }
        
        private void OnAddProspectOperationCompleted(object arg) {
            if ((this.AddProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProspectCompleted(this, new AddProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RePushProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RePushProspect(string prospectId) {
            object[] results = this.Invoke("RePushProspect", new object[] {
                        prospectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RePushProspectAsync(string prospectId) {
            this.RePushProspectAsync(prospectId, null);
        }
        
        /// <remarks/>
        public void RePushProspectAsync(string prospectId, object userState) {
            if ((this.RePushProspectOperationCompleted == null)) {
                this.RePushProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRePushProspectOperationCompleted);
            }
            this.InvokeAsync("RePushProspect", new object[] {
                        prospectId}, this.RePushProspectOperationCompleted, userState);
        }
        
        private void OnRePushProspectOperationCompleted(object arg) {
            if ((this.RePushProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RePushProspectCompleted(this, new RePushProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectsByProximityToZipCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProspectsByProximityToZipCode(string zipCode, int distanceInMiles, string filter) {
            object[] results = this.Invoke("GetProspectsByProximityToZipCode", new object[] {
                        zipCode,
                        distanceInMiles,
                        filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectsByProximityToZipCodeAsync(string zipCode, int distanceInMiles, string filter) {
            this.GetProspectsByProximityToZipCodeAsync(zipCode, distanceInMiles, filter, null);
        }
        
        /// <remarks/>
        public void GetProspectsByProximityToZipCodeAsync(string zipCode, int distanceInMiles, string filter, object userState) {
            if ((this.GetProspectsByProximityToZipCodeOperationCompleted == null)) {
                this.GetProspectsByProximityToZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectsByProximityToZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetProspectsByProximityToZipCode", new object[] {
                        zipCode,
                        distanceInMiles,
                        filter}, this.GetProspectsByProximityToZipCodeOperationCompleted, userState);
        }
        
        private void OnGetProspectsByProximityToZipCodeOperationCompleted(object arg) {
            if ((this.GetProspectsByProximityToZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectsByProximityToZipCodeCompleted(this, new GetProspectsByProximityToZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectsByProximityToZipCodeDataTableDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProspectsByProximityToZipCodeDataTableDataSet(string zipCode, int distanceInMiles, string filter) {
            object[] results = this.Invoke("GetProspectsByProximityToZipCodeDataTableDataSet", new object[] {
                        zipCode,
                        distanceInMiles,
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectsByProximityToZipCodeDataTableDataSetAsync(string zipCode, int distanceInMiles, string filter) {
            this.GetProspectsByProximityToZipCodeDataTableDataSetAsync(zipCode, distanceInMiles, filter, null);
        }
        
        /// <remarks/>
        public void GetProspectsByProximityToZipCodeDataTableDataSetAsync(string zipCode, int distanceInMiles, string filter, object userState) {
            if ((this.GetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted == null)) {
                this.GetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted);
            }
            this.InvokeAsync("GetProspectsByProximityToZipCodeDataTableDataSet", new object[] {
                        zipCode,
                        distanceInMiles,
                        filter}, this.GetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted, userState);
        }
        
        private void OnGetProspectsByProximityToZipCodeDataTableDataSetOperationCompleted(object arg) {
            if ((this.GetProspectsByProximityToZipCodeDataTableDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectsByProximityToZipCodeDataTableDataSetCompleted(this, new GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNearbyProspectsUsingSourcePremiumFilterDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNearbyProspectsUsingSourcePremiumFilterDataSet(string zipCode, string[] sourcePremiumFilter, string filterCriteria) {
            object[] results = this.Invoke("GetNearbyProspectsUsingSourcePremiumFilterDataSet", new object[] {
                        zipCode,
                        sourcePremiumFilter,
                        filterCriteria});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNearbyProspectsUsingSourcePremiumFilterDataSetAsync(string zipCode, string[] sourcePremiumFilter, string filterCriteria) {
            this.GetNearbyProspectsUsingSourcePremiumFilterDataSetAsync(zipCode, sourcePremiumFilter, filterCriteria, null);
        }
        
        /// <remarks/>
        public void GetNearbyProspectsUsingSourcePremiumFilterDataSetAsync(string zipCode, string[] sourcePremiumFilter, string filterCriteria, object userState) {
            if ((this.GetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted == null)) {
                this.GetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted);
            }
            this.InvokeAsync("GetNearbyProspectsUsingSourcePremiumFilterDataSet", new object[] {
                        zipCode,
                        sourcePremiumFilter,
                        filterCriteria}, this.GetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted, userState);
        }
        
        private void OnGetNearbyProspectsUsingSourcePremiumFilterDataSetOperationCompleted(object arg) {
            if ((this.GetNearbyProspectsUsingSourcePremiumFilterDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNearbyProspectsUsingSourcePremiumFilterDataSetCompleted(this, new GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProspectAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateProspectAvailability(string prospectId, bool isClaimed, string dealershipId, string dealershipUser) {
            object[] results = this.Invoke("UpdateProspectAvailability", new object[] {
                        prospectId,
                        isClaimed,
                        dealershipId,
                        dealershipUser});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProspectAvailabilityAsync(string prospectId, bool isClaimed, string dealershipId, string dealershipUser) {
            this.UpdateProspectAvailabilityAsync(prospectId, isClaimed, dealershipId, dealershipUser, null);
        }
        
        /// <remarks/>
        public void UpdateProspectAvailabilityAsync(string prospectId, bool isClaimed, string dealershipId, string dealershipUser, object userState) {
            if ((this.UpdateProspectAvailabilityOperationCompleted == null)) {
                this.UpdateProspectAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProspectAvailabilityOperationCompleted);
            }
            this.InvokeAsync("UpdateProspectAvailability", new object[] {
                        prospectId,
                        isClaimed,
                        dealershipId,
                        dealershipUser}, this.UpdateProspectAvailabilityOperationCompleted, userState);
        }
        
        private void OnUpdateProspectAvailabilityOperationCompleted(object arg) {
            if ((this.UpdateProspectAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProspectAvailabilityCompleted(this, new UpdateProspectAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProspectDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProspectDetail(string prospectId) {
            object[] results = this.Invoke("GetProspectDetail", new object[] {
                        prospectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProspectDetailAsync(string prospectId) {
            this.GetProspectDetailAsync(prospectId, null);
        }
        
        /// <remarks/>
        public void GetProspectDetailAsync(string prospectId, object userState) {
            if ((this.GetProspectDetailOperationCompleted == null)) {
                this.GetProspectDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProspectDetailOperationCompleted);
            }
            this.InvokeAsync("GetProspectDetail", new object[] {
                        prospectId}, this.GetProspectDetailOperationCompleted, userState);
        }
        
        private void OnGetProspectDetailOperationCompleted(object arg) {
            if ((this.GetProspectDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProspectDetailCompleted(this, new GetProspectDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddHistoryEntryForProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddHistoryEntryForProspect(string prospectId, string entryType, string entryDetail) {
            object[] results = this.Invoke("AddHistoryEntryForProspect", new object[] {
                        prospectId,
                        entryType,
                        entryDetail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHistoryEntryForProspectAsync(string prospectId, string entryType, string entryDetail) {
            this.AddHistoryEntryForProspectAsync(prospectId, entryType, entryDetail, null);
        }
        
        /// <remarks/>
        public void AddHistoryEntryForProspectAsync(string prospectId, string entryType, string entryDetail, object userState) {
            if ((this.AddHistoryEntryForProspectOperationCompleted == null)) {
                this.AddHistoryEntryForProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHistoryEntryForProspectOperationCompleted);
            }
            this.InvokeAsync("AddHistoryEntryForProspect", new object[] {
                        prospectId,
                        entryType,
                        entryDetail}, this.AddHistoryEntryForProspectOperationCompleted, userState);
        }
        
        private void OnAddHistoryEntryForProspectOperationCompleted(object arg) {
            if ((this.AddHistoryEntryForProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHistoryEntryForProspectCompleted(this, new AddHistoryEntryForProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddHistoryEntryForProspectWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddHistoryEntryForProspectWithUser(string prospectId, string entryType, string entryDetail, string username) {
            object[] results = this.Invoke("AddHistoryEntryForProspectWithUser", new object[] {
                        prospectId,
                        entryType,
                        entryDetail,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHistoryEntryForProspectWithUserAsync(string prospectId, string entryType, string entryDetail, string username) {
            this.AddHistoryEntryForProspectWithUserAsync(prospectId, entryType, entryDetail, username, null);
        }
        
        /// <remarks/>
        public void AddHistoryEntryForProspectWithUserAsync(string prospectId, string entryType, string entryDetail, string username, object userState) {
            if ((this.AddHistoryEntryForProspectWithUserOperationCompleted == null)) {
                this.AddHistoryEntryForProspectWithUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHistoryEntryForProspectWithUserOperationCompleted);
            }
            this.InvokeAsync("AddHistoryEntryForProspectWithUser", new object[] {
                        prospectId,
                        entryType,
                        entryDetail,
                        username}, this.AddHistoryEntryForProspectWithUserOperationCompleted, userState);
        }
        
        private void OnAddHistoryEntryForProspectWithUserOperationCompleted(object arg) {
            if ((this.AddHistoryEntryForProspectWithUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHistoryEntryForProspectWithUserCompleted(this, new AddHistoryEntryForProspectWithUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportBadProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportBadProspect(string reportXml) {
            object[] results = this.Invoke("ReportBadProspect", new object[] {
                        reportXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportBadProspectAsync(string reportXml) {
            this.ReportBadProspectAsync(reportXml, null);
        }
        
        /// <remarks/>
        public void ReportBadProspectAsync(string reportXml, object userState) {
            if ((this.ReportBadProspectOperationCompleted == null)) {
                this.ReportBadProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportBadProspectOperationCompleted);
            }
            this.InvokeAsync("ReportBadProspect", new object[] {
                        reportXml}, this.ReportBadProspectOperationCompleted, userState);
        }
        
        private void OnReportBadProspectOperationCompleted(object arg) {
            if ((this.ReportBadProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportBadProspectCompleted(this, new ReportBadProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurchaseProspect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PurchaseProspect(string purchaseRequestXml) {
            object[] results = this.Invoke("PurchaseProspect", new object[] {
                        purchaseRequestXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseProspectAsync(string purchaseRequestXml) {
            this.PurchaseProspectAsync(purchaseRequestXml, null);
        }
        
        /// <remarks/>
        public void PurchaseProspectAsync(string purchaseRequestXml, object userState) {
            if ((this.PurchaseProspectOperationCompleted == null)) {
                this.PurchaseProspectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseProspectOperationCompleted);
            }
            this.InvokeAsync("PurchaseProspect", new object[] {
                        purchaseRequestXml}, this.PurchaseProspectOperationCompleted, userState);
        }
        
        private void OnPurchaseProspectOperationCompleted(object arg) {
            if ((this.PurchaseProspectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseProspectCompleted(this, new PurchaseProspectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectSourcesXMLCompletedEventHandler(object sender, GetProspectSourcesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectSourcesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectSourcesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectSourcesDataSetCompletedEventHandler(object sender, GetProspectSourcesDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectSourcesDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectSourcesDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectSourcePremiumsXmlCompletedEventHandler(object sender, GetProspectSourcePremiumsXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectSourcePremiumsXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectSourcePremiumsXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectSourcePremiumsDataSetCompletedEventHandler(object sender, GetProspectSourcePremiumsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectSourcePremiumsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectSourcePremiumsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetReferenceXMLCompletedEventHandler(object sender, GetReferenceXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddProspectCompletedEventHandler(object sender, AddProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RePushProspectCompletedEventHandler(object sender, RePushProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RePushProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RePushProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectsByProximityToZipCodeCompletedEventHandler(object sender, GetProspectsByProximityToZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectsByProximityToZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectsByProximityToZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventHandler(object sender, GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectsByProximityToZipCodeDataTableDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventHandler(object sender, GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNearbyProspectsUsingSourcePremiumFilterDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateProspectAvailabilityCompletedEventHandler(object sender, UpdateProspectAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProspectAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProspectAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProspectDetailCompletedEventHandler(object sender, GetProspectDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProspectDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProspectDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddHistoryEntryForProspectCompletedEventHandler(object sender, AddHistoryEntryForProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHistoryEntryForProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHistoryEntryForProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddHistoryEntryForProspectWithUserCompletedEventHandler(object sender, AddHistoryEntryForProspectWithUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHistoryEntryForProspectWithUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHistoryEntryForProspectWithUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReportBadProspectCompletedEventHandler(object sender, ReportBadProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportBadProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportBadProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PurchaseProspectCompletedEventHandler(object sender, PurchaseProspectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseProspectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseProspectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591